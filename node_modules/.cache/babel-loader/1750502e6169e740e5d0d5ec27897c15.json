{"ast":null,"code":"import { visualElement } from '../index.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { checkTargetForNewValues } from '../utils/setters.mjs';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\n\nvar createRenderState = function createRenderState() {\n  return {};\n};\n\nvar threeVisualElement = visualElement({\n  treeType: \"three\",\n  readValueFromInstance: readThreeValue,\n  getBaseTarget: function getBaseTarget() {\n    return undefined;\n  },\n  sortNodePosition: function sortNodePosition(a, b) {\n    return a.id - b.id;\n  },\n  makeTargetAnimatable: function makeTargetAnimatable(element, target) {\n    checkTargetForNewValues(element, target, {});\n    return target;\n  },\n  restoreTransform: function restoreTransform() {},\n  resetTransform: function resetTransform() {},\n  removeValueFromRenderState: function removeValueFromRenderState(_key, _renderState) {},\n  measureViewportBox: createBox,\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function build(_element, state, latestValues) {\n    for (var key in latestValues) {\n      state[key] = latestValues[key];\n    }\n  },\n  render: function render(instance, renderState) {\n    for (var key in renderState) {\n      setThreeValue(instance, key, renderState);\n    }\n  }\n});\n\nvar createVisualElement = function createVisualElement(_, options) {\n  return threeVisualElement(options);\n};\n\nexport { createRenderState, createVisualElement, threeVisualElement };","map":{"version":3,"names":["visualElement","createBox","checkTargetForNewValues","setThreeValue","readThreeValue","scrapeMotionValuesFromProps","createRenderState","threeVisualElement","treeType","readValueFromInstance","getBaseTarget","undefined","sortNodePosition","a","b","id","makeTargetAnimatable","element","target","restoreTransform","resetTransform","removeValueFromRenderState","_key","_renderState","measureViewportBox","build","_element","state","latestValues","key","render","instance","renderState","createVisualElement","_","options"],"sources":["/Users/Juan/Documents/coding/framer-3d-button/node_modules/framer-motion/dist/es/render/three/create-visual-element.mjs"],"sourcesContent":["import { visualElement } from '../index.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { checkTargetForNewValues } from '../utils/setters.mjs';\nimport { setThreeValue } from './utils/set-value.mjs';\nimport { readThreeValue } from './utils/read-value.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-value.mjs';\n\nvar createRenderState = function () { return ({}); };\nvar threeVisualElement = visualElement({\n    treeType: \"three\",\n    readValueFromInstance: readThreeValue,\n    getBaseTarget: function () {\n        return undefined;\n    },\n    sortNodePosition: function (a, b) {\n        return a.id - b.id;\n    },\n    makeTargetAnimatable: function (element, target) {\n        checkTargetForNewValues(element, target, {});\n        return target;\n    },\n    restoreTransform: function () { },\n    resetTransform: function () { },\n    removeValueFromRenderState: function (_key, _renderState) { },\n    measureViewportBox: createBox,\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, state, latestValues) {\n        for (var key in latestValues) {\n            state[key] = latestValues[key];\n        }\n    },\n    render: function (instance, renderState) {\n        for (var key in renderState) {\n            setThreeValue(instance, key, renderState);\n        }\n    },\n});\nvar createVisualElement = function (_, options) {\n    return threeVisualElement(options);\n};\n\nexport { createRenderState, createVisualElement, threeVisualElement };\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,2BAAT,QAA4C,iCAA5C;;AAEA,IAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;EAAE,OAAQ,EAAR;AAAc,CAApD;;AACA,IAAIC,kBAAkB,GAAGP,aAAa,CAAC;EACnCQ,QAAQ,EAAE,OADyB;EAEnCC,qBAAqB,EAAEL,cAFY;EAGnCM,aAAa,EAAE,yBAAY;IACvB,OAAOC,SAAP;EACH,CALkC;EAMnCC,gBAAgB,EAAE,0BAAUC,CAAV,EAAaC,CAAb,EAAgB;IAC9B,OAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;EACH,CARkC;EASnCC,oBAAoB,EAAE,8BAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC7ChB,uBAAuB,CAACe,OAAD,EAAUC,MAAV,EAAkB,EAAlB,CAAvB;IACA,OAAOA,MAAP;EACH,CAZkC;EAanCC,gBAAgB,EAAE,4BAAY,CAAG,CAbE;EAcnCC,cAAc,EAAE,0BAAY,CAAG,CAdI;EAenCC,0BAA0B,EAAE,oCAAUC,IAAV,EAAgBC,YAAhB,EAA8B,CAAG,CAf1B;EAgBnCC,kBAAkB,EAAEvB,SAhBe;EAiBnCI,2BAA2B,EAAEA,2BAjBM;EAkBnCoB,KAAK,EAAE,eAAUC,QAAV,EAAoBC,KAApB,EAA2BC,YAA3B,EAAyC;IAC5C,KAAK,IAAIC,GAAT,IAAgBD,YAAhB,EAA8B;MAC1BD,KAAK,CAACE,GAAD,CAAL,GAAaD,YAAY,CAACC,GAAD,CAAzB;IACH;EACJ,CAtBkC;EAuBnCC,MAAM,EAAE,gBAAUC,QAAV,EAAoBC,WAApB,EAAiC;IACrC,KAAK,IAAIH,GAAT,IAAgBG,WAAhB,EAA6B;MACzB7B,aAAa,CAAC4B,QAAD,EAAWF,GAAX,EAAgBG,WAAhB,CAAb;IACH;EACJ;AA3BkC,CAAD,CAAtC;;AA6BA,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,CAAV,EAAaC,OAAb,EAAsB;EAC5C,OAAO5B,kBAAkB,CAAC4B,OAAD,CAAzB;AACH,CAFD;;AAIA,SAAS7B,iBAAT,EAA4B2B,mBAA5B,EAAiD1B,kBAAjD"},"metadata":{},"sourceType":"module"}