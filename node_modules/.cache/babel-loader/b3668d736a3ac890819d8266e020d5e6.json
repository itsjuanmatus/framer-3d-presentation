{"ast":null,"code":"import _slicedToArray from \"/Users/Juan/Documents/coding/framer-3d-button/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/Juan/Documents/coding/framer-3d-button/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var scale = _ref.scale,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 1 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 1 : _ref$height,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? 1 : _ref$blur,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 10 : _ref$far,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var shadowCamera = React.useRef();\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n\n  var _React$useMemo = React.useMemo(function () {\n    var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    var planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    var blurPlane = new THREE.Mesh(planeGeometry);\n    var depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = function (shader) {\n      return shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n      renderTarget = _React$useMemo2[0],\n      planeGeometry = _React$useMemo2[1],\n      depthMaterial = _React$useMemo2[2],\n      blurPlane = _React$useMemo2[3],\n      horizontalBlurMaterial = _React$useMemo2[4],\n      verticalBlurMaterial = _React$useMemo2[5],\n      renderTargetBlur = _React$useMemo2[6];\n\n  var count = 0;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      var initialBackground = scene.background;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = null;\n      blurPlane.material = horizontalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTarget.texture;\n      horizontalBlurMaterial.uniforms.h.value = blur / 256;\n      gl.setRenderTarget(renderTargetBlur);\n      gl.render(blurPlane, shadowCamera.current);\n      blurPlane.material = verticalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTargetBlur.texture;\n      verticalBlurMaterial.uniforms.v.value = blur / 256;\n      gl.setRenderTarget(renderTarget);\n      gl.render(blurPlane, shadowCamera.current);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    transparent: true,\n    opacity: opacity\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","ref","scale","frames","Infinity","opacity","width","height","blur","far","resolution","props","scene","gl","shadowCamera","useRef","Array","isArray","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","depthWrite","onBeforeCompile","shader","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","count","current","initialBackground","background","overrideMaterial","setRenderTarget","render","material","uniforms","tDiffuse","value","h","v","createElement","geometry","rotation","map","transparent","args"],"sources":["/Users/Juan/Documents/coding/framer-3d-button/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 256,\n  ...props\n}, ref) => {\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const shadowCamera = React.useRef();\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale]);\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = null;\n      blurPlane.material = horizontalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTarget.texture;\n      horizontalBlurMaterial.uniforms.h.value = blur / 256;\n      gl.setRenderTarget(renderTargetBlur);\n      gl.render(blurPlane, shadowCamera.current);\n      blurPlane.material = verticalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTargetBlur.texture;\n      verticalBlurMaterial.uniforms.v.value = blur / 256;\n      gl.setRenderTarget(renderTarget);\n      gl.render(blurPlane, shadowCamera.current);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    transparent: true,\n    opacity: opacity\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}