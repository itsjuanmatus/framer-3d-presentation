{"ast":null,"code":"import { Color } from 'three';\n\nvar readVector = function readVector(name, defaultValue) {\n  return function (axis) {\n    return function (instance) {\n      var value = instance[name];\n      return value ? value[axis] : defaultValue;\n    };\n  };\n};\n\nvar readPosition = readVector(\"position\", 0);\nvar readScale = readVector(\"scale\", 1);\nvar readRotation = readVector(\"rotation\", 0);\nvar readers = {\n  x: readPosition(\"x\"),\n  y: readPosition(\"y\"),\n  z: readPosition(\"z\"),\n  scale: readScale(\"x\"),\n  scaleX: readScale(\"x\"),\n  scaleY: readScale(\"y\"),\n  scaleZ: readScale(\"z\"),\n  rotateX: readRotation(\"x\"),\n  rotateY: readRotation(\"y\"),\n  rotateZ: readRotation(\"z\")\n};\n\nfunction readAnimatableValue(value) {\n  if (!value) return;\n\n  if (value instanceof Color) {\n    return value.getStyle();\n  } else {\n    return value;\n  }\n}\n\nfunction readThreeValue(instance, name) {\n  var _a;\n\n  return readers[name] ? readers[name](instance) : (_a = readAnimatableValue(instance[name])) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { readThreeValue };","map":{"version":3,"names":["Color","readVector","name","defaultValue","axis","instance","value","readPosition","readScale","readRotation","readers","x","y","z","scale","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","readAnimatableValue","getStyle","readThreeValue","_a"],"sources":["/Users/Juan/Documents/coding/framer-3d-button/node_modules/framer-motion/dist/es/render/three/utils/read-value.mjs"],"sourcesContent":["import { Color } from 'three';\n\nvar readVector = function (name, defaultValue) {\n    return function (axis) {\n        return function (instance) {\n            var value = instance[name];\n            return value ? value[axis] : defaultValue;\n        };\n    };\n};\nvar readPosition = readVector(\"position\", 0);\nvar readScale = readVector(\"scale\", 1);\nvar readRotation = readVector(\"rotation\", 0);\nvar readers = {\n    x: readPosition(\"x\"),\n    y: readPosition(\"y\"),\n    z: readPosition(\"z\"),\n    scale: readScale(\"x\"),\n    scaleX: readScale(\"x\"),\n    scaleY: readScale(\"y\"),\n    scaleZ: readScale(\"z\"),\n    rotateX: readRotation(\"x\"),\n    rotateY: readRotation(\"y\"),\n    rotateZ: readRotation(\"z\"),\n};\nfunction readAnimatableValue(value) {\n    if (!value)\n        return;\n    if (value instanceof Color) {\n        return value.getStyle();\n    }\n    else {\n        return value;\n    }\n}\nfunction readThreeValue(instance, name) {\n    var _a;\n    return readers[name]\n        ? readers[name](instance)\n        : (_a = readAnimatableValue(instance[name])) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { readThreeValue };\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAAUC,IAAV,EAAgBC,YAAhB,EAA8B;EAC3C,OAAO,UAAUC,IAAV,EAAgB;IACnB,OAAO,UAAUC,QAAV,EAAoB;MACvB,IAAIC,KAAK,GAAGD,QAAQ,CAACH,IAAD,CAApB;MACA,OAAOI,KAAK,GAAGA,KAAK,CAACF,IAAD,CAAR,GAAiBD,YAA7B;IACH,CAHD;EAIH,CALD;AAMH,CAPD;;AAQA,IAAII,YAAY,GAAGN,UAAU,CAAC,UAAD,EAAa,CAAb,CAA7B;AACA,IAAIO,SAAS,GAAGP,UAAU,CAAC,OAAD,EAAU,CAAV,CAA1B;AACA,IAAIQ,YAAY,GAAGR,UAAU,CAAC,UAAD,EAAa,CAAb,CAA7B;AACA,IAAIS,OAAO,GAAG;EACVC,CAAC,EAAEJ,YAAY,CAAC,GAAD,CADL;EAEVK,CAAC,EAAEL,YAAY,CAAC,GAAD,CAFL;EAGVM,CAAC,EAAEN,YAAY,CAAC,GAAD,CAHL;EAIVO,KAAK,EAAEN,SAAS,CAAC,GAAD,CAJN;EAKVO,MAAM,EAAEP,SAAS,CAAC,GAAD,CALP;EAMVQ,MAAM,EAAER,SAAS,CAAC,GAAD,CANP;EAOVS,MAAM,EAAET,SAAS,CAAC,GAAD,CAPP;EAQVU,OAAO,EAAET,YAAY,CAAC,GAAD,CARX;EASVU,OAAO,EAAEV,YAAY,CAAC,GAAD,CATX;EAUVW,OAAO,EAAEX,YAAY,CAAC,GAAD;AAVX,CAAd;;AAYA,SAASY,mBAAT,CAA6Bf,KAA7B,EAAoC;EAChC,IAAI,CAACA,KAAL,EACI;;EACJ,IAAIA,KAAK,YAAYN,KAArB,EAA4B;IACxB,OAAOM,KAAK,CAACgB,QAAN,EAAP;EACH,CAFD,MAGK;IACD,OAAOhB,KAAP;EACH;AACJ;;AACD,SAASiB,cAAT,CAAwBlB,QAAxB,EAAkCH,IAAlC,EAAwC;EACpC,IAAIsB,EAAJ;;EACA,OAAOd,OAAO,CAACR,IAAD,CAAP,GACDQ,OAAO,CAACR,IAAD,CAAP,CAAcG,QAAd,CADC,GAED,CAACmB,EAAE,GAAGH,mBAAmB,CAAChB,QAAQ,CAACH,IAAD,CAAT,CAAzB,MAA+C,IAA/C,IAAuDsB,EAAE,KAAK,KAAK,CAAnE,GAAuEA,EAAvE,GAA4E,CAFlF;AAGH;;AAED,SAASD,cAAT"},"metadata":{},"sourceType":"module"}